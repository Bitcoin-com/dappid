{"version":3,"file":"dapid.es5.js","sources":["../src/dappid.ts"],"sourcesContent":["// Import here Polyfills if needed. Recommended core-js (npm i -D core-js)\n// import \"core-js/fn/array.find\"\n// ...\n\nconst BITBOXCli = require('bitbox-sdk/lib/bitbox-sdk').default\nconst BITBOX = new BITBOXCli()\n\nexport default class DAppID {\n  encodeBDIP2(\n    txType: string,\n    txVersion: string,\n    appType: string,\n    name: string,\n    protocolSpec: string,\n    url: string,\n    metaData: string\n  ): string {\n    const script = [\n      BITBOX.Script.opcodes.OP_RETURN,\n      // hardcoded magic number. 4 bytes\n      Buffer.from('64617070', 'hex'),\n\n      // txType. 1 byte\n      Buffer.from(txType, 'hex'),\n\n      // txVersion. 2 bytes\n      Buffer.from(txVersion, 'hex'),\n\n      // appType. 1 byte\n      Buffer.from(appType, 'hex'),\n\n      // name. 14 bytes\n      Buffer.from(name, 'ascii'),\n\n      // protocolSpec. 32 bytes\n      Buffer.from(protocolSpec, 'hex'),\n\n      // url. 12 bytes\n      Buffer.from(url, 'ascii'),\n\n      // meta data. 18 bytes\n      Buffer.from(metaData, 'ascii')\n    ]\n\n    return BITBOX.Script.toASM(BITBOX.Script.encode(script))\n  }\n\n  decodeBDIP2(dappid: string): object {\n    let split = dappid.split(' ')\n    return {\n      magicNumber: split[1],\n      txType: split[2],\n      txVersion: split[3],\n      appType: split[4],\n      name: BITBOX.Script.decode(Buffer.from(split[5], 'hex')).toString(\n        'ascii'\n      ),\n      protocolSpec: split[6],\n      url: BITBOX.Script.decode(Buffer.from(split[7], 'hex')).toString('ascii'),\n      metaData: BITBOX.Script.decode(Buffer.from(split[8], 'hex')).toString(\n        'ascii'\n      )\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;AAIA,IAAM,SAAS,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAA;AAC9D,IAAM,MAAM,GAAG,IAAI,SAAS,EAAE,CAAA;AAE9B;IAAA;KAyDC;IAxDC,4BAAW,GAAX,UACE,MAAc,EACd,SAAiB,EACjB,OAAe,EACf,IAAY,EACZ,YAAoB,EACpB,GAAW,EACX,QAAgB;QAEhB,IAAM,MAAM,GAAG;YACb,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS;;YAE/B,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;;YAG9B,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;;YAG1B,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;;YAG7B,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;;YAG3B,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;;YAG1B,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC;;YAGhC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC;;YAGzB,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;SAC/B,CAAA;QAED,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA;KACzD;IAED,4BAAW,GAAX,UAAY,MAAc;QACxB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAC7B,OAAO;YACL,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;YACrB,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;YAChB,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;YACnB,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;YACjB,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,CAC/D,OAAO,CACR;YACD,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;YACtB,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;YACzE,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,CACnE,OAAO,CACR;SACF,CAAA;KACF;IACH,aAAC;CAAA,IAAA;;;;"}